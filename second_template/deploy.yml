apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: rest-template1
  name: rest-template1
  namespace: apps
spec:
  progressDeadlineSeconds: 120
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: rest-template1
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      creationTimestamp: null
      labels:
        app: rest-template1
    spec:
      imagePullSecrets:
      - name: default-secret
      containers:
        - name: rest-template1
          image: swr.ru-moscow-1.hc.sbercloud.ru/sber/backstage-sevice-rest1:v1
          imagePullPolicy: IfNotPresent
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /day
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 2
            successThreshold: 1
            timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kubernetes.io/elb.autocreate: '{"type":"public","bandwidth_name":"cce-bandwidth-1632310175221","bandwidth_chargemode":"traffic","bandwidth_size":5,"bandwidth_sharetype":"PER","eip_type":"5_bgp"}'
    kubernetes.io/elb.class: union
    kubernetes.io/elb.enterpriseID: "0"
    kubernetes.io/elb.health-check-flag: "on"
    kubernetes.io/elb.health-check-option: '{"protocol":"TCP","delay":"5","timeout":"10","max_retries":"3"}'
    kubernetes.io/elb.lb-algorithm: ROUND_ROBIN
  finalizers:
  - service.kubernetes.io/load-balancer-cleanup
  labels:
    app: rest-template1
  name: rest-template1-svc
  namespace: 
spec:
  externalTrafficPolicy: Cluster
  ports:
  - name: default-http-backend
    port: 8080
  selector:
    app: rest-template1
  sessionAffinity: None
  type: LoadBalancer
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: external-service
  namespace: apps
  annotations:
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  rules:
  - host: rest-template1.apps
    http:
      paths:
      - path: /*
        pathType: Prefix
        backend:
          service:
            name: rest-template1-svc
            port:
              number: 8080
---
